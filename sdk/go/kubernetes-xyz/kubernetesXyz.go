// Code generated by Pulumi SDK Generator DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kubernetesxyz

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Automates the management and issuance of TLS certificates from various issuing sources within Kubernetes
type KubernetesXyz struct {
	pulumi.ResourceState

	// Detailed information about the status of the underlying Helm deployment.
	Status ReleaseStatusOutput `pulumi:"status"`
}

// NewKubernetesXyz registers a new resource with the given unique name, arguments, and options.
func NewKubernetesXyz(ctx *pulumi.Context,
	name string, args *KubernetesXyzArgs, opts ...pulumi.ResourceOption) (*KubernetesXyz, error) {
	if args == nil {
		args = &KubernetesXyzArgs{}
	}

	var resource KubernetesXyz
	err := ctx.RegisterRemoteComponentResource("kubernetes-xyz:index:KubernetesXyz", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type kubernetesXyzArgs struct {
	Global *KubernetesXyzGlobal `pulumi:"global"`
	// HelmOptions is an escape hatch that lets the end user control any aspect of the Helm deployment. This exposes the entirety of the underlying Helm Release component args.
	HelmOptions *Release `pulumi:"helmOptions"`
	InstallCRDs *bool    `pulumi:"installCRDs"`
}

// The set of arguments for constructing a KubernetesXyz resource.
type KubernetesXyzArgs struct {
	Global KubernetesXyzGlobalPtrInput
	// HelmOptions is an escape hatch that lets the end user control any aspect of the Helm deployment. This exposes the entirety of the underlying Helm Release component args.
	HelmOptions ReleasePtrInput
	InstallCRDs pulumi.BoolPtrInput
}

func (KubernetesXyzArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kubernetesXyzArgs)(nil)).Elem()
}

type KubernetesXyzInput interface {
	pulumi.Input

	ToKubernetesXyzOutput() KubernetesXyzOutput
	ToKubernetesXyzOutputWithContext(ctx context.Context) KubernetesXyzOutput
}

func (*KubernetesXyz) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesXyz)(nil)).Elem()
}

func (i *KubernetesXyz) ToKubernetesXyzOutput() KubernetesXyzOutput {
	return i.ToKubernetesXyzOutputWithContext(context.Background())
}

func (i *KubernetesXyz) ToKubernetesXyzOutputWithContext(ctx context.Context) KubernetesXyzOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesXyzOutput)
}

// KubernetesXyzArrayInput is an input type that accepts KubernetesXyzArray and KubernetesXyzArrayOutput values.
// You can construct a concrete instance of `KubernetesXyzArrayInput` via:
//
//	KubernetesXyzArray{ KubernetesXyzArgs{...} }
type KubernetesXyzArrayInput interface {
	pulumi.Input

	ToKubernetesXyzArrayOutput() KubernetesXyzArrayOutput
	ToKubernetesXyzArrayOutputWithContext(context.Context) KubernetesXyzArrayOutput
}

type KubernetesXyzArray []KubernetesXyzInput

func (KubernetesXyzArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KubernetesXyz)(nil)).Elem()
}

func (i KubernetesXyzArray) ToKubernetesXyzArrayOutput() KubernetesXyzArrayOutput {
	return i.ToKubernetesXyzArrayOutputWithContext(context.Background())
}

func (i KubernetesXyzArray) ToKubernetesXyzArrayOutputWithContext(ctx context.Context) KubernetesXyzArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesXyzArrayOutput)
}

// KubernetesXyzMapInput is an input type that accepts KubernetesXyzMap and KubernetesXyzMapOutput values.
// You can construct a concrete instance of `KubernetesXyzMapInput` via:
//
//	KubernetesXyzMap{ "key": KubernetesXyzArgs{...} }
type KubernetesXyzMapInput interface {
	pulumi.Input

	ToKubernetesXyzMapOutput() KubernetesXyzMapOutput
	ToKubernetesXyzMapOutputWithContext(context.Context) KubernetesXyzMapOutput
}

type KubernetesXyzMap map[string]KubernetesXyzInput

func (KubernetesXyzMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KubernetesXyz)(nil)).Elem()
}

func (i KubernetesXyzMap) ToKubernetesXyzMapOutput() KubernetesXyzMapOutput {
	return i.ToKubernetesXyzMapOutputWithContext(context.Background())
}

func (i KubernetesXyzMap) ToKubernetesXyzMapOutputWithContext(ctx context.Context) KubernetesXyzMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesXyzMapOutput)
}

type KubernetesXyzOutput struct{ *pulumi.OutputState }

func (KubernetesXyzOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesXyz)(nil)).Elem()
}

func (o KubernetesXyzOutput) ToKubernetesXyzOutput() KubernetesXyzOutput {
	return o
}

func (o KubernetesXyzOutput) ToKubernetesXyzOutputWithContext(ctx context.Context) KubernetesXyzOutput {
	return o
}

// Detailed information about the status of the underlying Helm deployment.
func (o KubernetesXyzOutput) Status() ReleaseStatusOutput {
	return o.ApplyT(func(v *KubernetesXyz) ReleaseStatusOutput { return v.Status }).(ReleaseStatusOutput)
}

type KubernetesXyzArrayOutput struct{ *pulumi.OutputState }

func (KubernetesXyzArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KubernetesXyz)(nil)).Elem()
}

func (o KubernetesXyzArrayOutput) ToKubernetesXyzArrayOutput() KubernetesXyzArrayOutput {
	return o
}

func (o KubernetesXyzArrayOutput) ToKubernetesXyzArrayOutputWithContext(ctx context.Context) KubernetesXyzArrayOutput {
	return o
}

func (o KubernetesXyzArrayOutput) Index(i pulumi.IntInput) KubernetesXyzOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KubernetesXyz {
		return vs[0].([]*KubernetesXyz)[vs[1].(int)]
	}).(KubernetesXyzOutput)
}

type KubernetesXyzMapOutput struct{ *pulumi.OutputState }

func (KubernetesXyzMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KubernetesXyz)(nil)).Elem()
}

func (o KubernetesXyzMapOutput) ToKubernetesXyzMapOutput() KubernetesXyzMapOutput {
	return o
}

func (o KubernetesXyzMapOutput) ToKubernetesXyzMapOutputWithContext(ctx context.Context) KubernetesXyzMapOutput {
	return o
}

func (o KubernetesXyzMapOutput) MapIndex(k pulumi.StringInput) KubernetesXyzOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KubernetesXyz {
		return vs[0].(map[string]*KubernetesXyz)[vs[1].(string)]
	}).(KubernetesXyzOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesXyzInput)(nil)).Elem(), &KubernetesXyz{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesXyzArrayInput)(nil)).Elem(), KubernetesXyzArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesXyzMapInput)(nil)).Elem(), KubernetesXyzMap{})
	pulumi.RegisterOutputType(KubernetesXyzOutput{})
	pulumi.RegisterOutputType(KubernetesXyzArrayOutput{})
	pulumi.RegisterOutputType(KubernetesXyzMapOutput{})
}
